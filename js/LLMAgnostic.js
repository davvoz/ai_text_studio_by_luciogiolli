/**
 * LLMAgnostic - Mock API for simulating AI model responses
 * This class simulates responses from a language model
 */
class LLMAgnostic {
    static chat = {
        completions: {
            create: async ({ messages }) => {
                // Simulate an API call to a language model
                return new Promise((resolve) => {
                    setTimeout(() => {
                        // Get the user message (last message)
                        const userMessage = messages[messages.length - 1];
                        
                        // Generate a mock response based on the prompt type and user input
                        let response = "This is a mock response from the AI model.";
                        
                        // If the message contains keywords, it's probably from the generator service
                        if (userMessage.content.includes("Enter topic or keywords")) {
                            response = `# Generated Content\n\nThis is a generated response based on your keywords.\n\n## Main Points\n\n- First point about your topic\n- Second important consideration\n- Third interesting aspect\n\n## Further Information\n\nHere's more detailed information about what you requested. This is a mock response but in a real implementation, this would be generated by an AI model.`;
                        } 
                        // Otherwise it's probably from the formatter service
                        else {
                            response = `# Formatted Text\n\nThis is your text after formatting.\n\n## Highlights\n\n- Made it more concise\n- Improved readability\n- Added structure\n\nThe actual formatting would depend on the style you selected (social, blog, or minimal).`;
                        }
                        
                        resolve({
                            role: "assistant",
                            content: response
                        });
                    }, 2000);
                });
            }
        }
    };
}

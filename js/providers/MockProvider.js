/**
 * MockProvider - Implementation of ProviderStrategy for mock/demo responses
 * This provider doesn't make actual API calls and returns predefined responses
 */
import ProviderStrategy from './ProviderStrategy.js';

export default class MockProvider extends ProviderStrategy {
    /**
     * Get mock completions for demonstration purposes
     * @param {Array} messages - Array of message objects with role and content
     * @returns {Promise<Object>} - Mock response object
     */
    async getCompletions(messages) {
        return new Promise((resolve) => {
            setTimeout(() => {
                const userMessage = messages[messages.length - 1];
                let response = "This is a mock response from the AI model.";
                
                if (userMessage.content.includes("Enter topic or keywords")) {
                    response = `# Generated Content\n\nThis is a generated response based on your keywords.\n\n## Main Points\n\n- First point about your topic\n- Second important consideration\n- Third interesting aspect\n\n## Further Information\n\nHere's more detailed information about what you requested. This is a mock response but in a real implementation, this would be generated by an AI model.`;
                } else {
                    response = `# Formatted Text\n\nThis is your text after formatting.\n\n## Highlights\n\n- Made it more concise\n- Improved readability\n- Added structure\n\nThe actual formatting would depend on the style you selected (social, blog, or minimal).`;
                }
                
                resolve({
                    role: "assistant",
                    content: response
                });
            }, 2000);
        });
    }
}
